apiVersion: v1
kind: ConfigMap
metadata:
  name: apm-server-config
  namespace: arclytics
  labels:
    app: apm-server
    component: apm-server
data:
  apm-server.yml: |
    apm-server:
      host: "0.0.0.0:8200"
      ssl:
        enabled: false
        #key: "/usr/share/ssl/tls.key"
        #certificate: "/usr/share/ssl/tls.crt"
      # Note: This doesn't seem to work as the ConfigMap is created external to the Pods
      # which means there are no environment variables set at the time this file is created.
      #secret_token: '${ELASTIC_APM_SECRET_TOKEN}'
      frontend:
        enabled: false
      rum:
        enabled: false
        event_rate.limit: 300
        event_rate.lru_size: 1000
        allow_origins: ['*']
        library_pattern: "node_modules|bower_components|~"
        exclude_from_grouping: "^/webpack"
        #source_mapping:
        #  enabled: true
        #  cache.expiration: 5m
        #  index_pattern: "apm-*-sourcemap*"
    setup.template.settings:
      index:
        number_of_shards: 1
        codec: best_compression
    setup.kibana:
      enabled: true
      host: http://kibana-service.arclytics.svc.cluster.local:5601
    output.elasticsearch:
      hosts: ["http://elasticsearch-0.elasticsearch.arclytics.svc.cluster.local:9200", "http://elasticsearch-1.elasticsearch.arclytics.svc.cluster.local:9200"]
      #username: '${ELASTICSEARCH_USER:elastic}'
      #passowrd: '${ELASTICSEARCH_PASSWORD:elastic}'
      #protocol: https
    queue.mem.events: 4096
    max_procs: 4
---
apiVersion: v1
kind: Service
metadata:
  name: apm-service
  namespace: arclytics
  labels:
    app: apm-server
    component: apm-server
spec:
  type: NodePort
  selector:
    app: apm-server
  ports:
    - name: http
      port: 8200
      targetPort: 8200
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: apm-server
  namespace: arclytics
  labels:
    app: apm-server
    component: apm-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apm-server
  template:
    metadata:
      labels:
        app: apm-server
        component: apm-server
    spec:
      containers:
        - name: apm-server-container
          image: docker.elastic.co/apm/apm-server:7.3.2
          ports:
            - name: http
              containerPort: 8200
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 1Gi
            limits:
              cpu: 300m
              memory: 2Gi
          env:
            - name: ELASTIC_APM_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: elastic_apm_secret_token
            - name: ELASTICSEARCH_HOST
              value: elasticsearch.arclytics.svc.cluster.local
            - name: ELASTICSEARCH_PORT
              value: "9200"
            # X-Pack Authentication  -- required by fluentd even if not used
            # =====================
            - name: ELASTICSEARCH_USER
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: elastic_user
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: elastic_password
            - name: KIBANA_HOST
              value: kibana-service.arclytics.svc.cluster.local
            - name: KIBANA_PORT
              value: "5601"
          volumeMounts:
            - name: apm-server-config
              mountPath: /usr/share/apm-server/apm-server.yml
              readOnly: true
              subPath: apm-server.yml
            - name: apm-server-ssl
              mountPath: /usr/share/ssl
              readOnly: true
      volumes:
        - name: apm-server-config
          configMap:
            name: apm-server-config
        - name: apm-server-ssl
          secret:
            secretName: apm-app-https-secret
